,Name,Link,Affected Package,Description
0,Uncontrolled Recursion in systemd-pam | CVE-2021-3997 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-3997,RHEL:8,A flaw was found in systemd. An uncontrolled recursion in systemd-tmpfiles may lead to a denial of service at boot time when too many nested directories are created in /tmp.
1,Uncontrolled Recursion in systemd-libs | CVE-2021-3997 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-3997,RHEL:8,A flaw was found in systemd. An uncontrolled recursion in systemd-tmpfiles may lead to a denial of service at boot time when too many nested directories are created in /tmp.
2,Out-of-Bounds in ncurses-libs | CVE-2018-19211 | Snyk,https://www.cve.org/CVERecord?id=CVE-2018-19211,RHEL:8,"In ncurses 6.1, there is a NULL pointer dereference at function _nc_parse_entry in parse_entry.c that will lead to a denial of service attack. The product proceeds to the dereference code path even after a ""dubious character `*' in name or alias field"" detection."
3,Out-of-Bounds in ncurses-libs | CVE-2018-19217 | Snyk,https://www.cve.org/CVERecord?id=CVE-2018-19217,RHEL:8,"** DISPUTED ** In ncurses, possibly a 6.x version, there is a NULL pointer dereference at the function _nc_name_match that will lead to a denial of service attack. NOTE: the original report stated version 6.1, but the issue did not reproduce for that version according to the maintainer or a reliable third-party."
4,Out-of-Bounds in ncurses-base | CVE-2018-19211 | Snyk,https://www.cve.org/CVERecord?id=CVE-2018-19211,RHEL:8,"In ncurses 6.1, there is a NULL pointer dereference at function _nc_parse_entry in parse_entry.c that will lead to a denial of service attack. The product proceeds to the dereference code path even after a ""dubious character `*' in name or alias field"" detection."
5,Out-of-Bounds in ncurses-base | CVE-2018-19217 | Snyk,https://www.cve.org/CVERecord?id=CVE-2018-19217,RHEL:8,"** DISPUTED ** In ncurses, possibly a 6.x version, there is a NULL pointer dereference at the function _nc_name_match that will lead to a denial of service attack. NOTE: the original report stated version 6.1, but the issue did not reproduce for that version according to the maintainer or a reliable third-party."
6,Improper Preservation of Permissions in libzstd | CVE-2021-24032 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-24032,RHEL:8,"Beginning in v1.4.1 and prior to v1.4.9, due to an incomplete fix for CVE-2021-24031, the Zstandard command-line utility created output files with default permissions and restricted those permissions immediately afterwards. Output files could therefore momentarily be readable or writable to unintended parties."
7,Improper Input Validation in libgcc | CVE-2019-14250 | Snyk,https://www.cve.org/CVERecord?id=CVE-2019-14250,RHEL:8,"An issue was discovered in GNU libiberty, as distributed in GNU Binutils 2.32. simple_object_elf_match in simple-object-elf.c does not check for a zero shstrndx value, leading to an integer overflow and resultant heap-based buffer overflow."
8,Resource Exhaustion in libgcc | CVE-2018-20657 | Snyk,https://www.cve.org/CVERecord?id=CVE-2018-20657,RHEL:8,"The demangle_template function in cplus-dem.c in GNU libiberty, as distributed in GNU Binutils 2.31.1, has a memory leak via a crafted string, leading to a denial of service (memory consumption), as demonstrated by cxxfilt, a related issue to CVE-2018-12698."
9,Resource Exhaustion in libgcc | CVE-2022-27943 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-27943,RHEL:8,"libiberty/rust-demangle.c in GNU GCC 11.2 allows stack consumption in demangle_const, as demonstrated by nm-new."
10,Out-of-Bounds in zlib | CVE-2022-37434 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-37434,RHEL:8,"zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference)."
11,Information Exposure in systemd-pam | CVE-2018-20839 | Snyk,https://www.cve.org/CVERecord?id=CVE-2018-20839,RHEL:8,"systemd 242 changes the VT1 mode upon a logout, which allows attackers to read cleartext passwords in certain circumstances, such as watching a shutdown, or using Ctrl-Alt-F1 and Ctrl-Alt-F2. This occurs because the KDGKBMODE (aka current keyboard mode) check is mishandled."
12,Off-by-one Error in systemd-pam | CVE-2022-3821 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-3821,RHEL:8,"An off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service."
13,Information Exposure in systemd-pam | CVE-2022-4415 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-4415,RHEL:8,A vulnerability was found in systemd. This security flaw can cause a local information leak due to systemd-coredump not respecting the fs.suid_dumpable kernel setting.
14,Information Exposure in systemd-libs | CVE-2018-20839 | Snyk,https://www.cve.org/CVERecord?id=CVE-2018-20839,RHEL:8,"systemd 242 changes the VT1 mode upon a logout, which allows attackers to read cleartext passwords in certain circumstances, such as watching a shutdown, or using Ctrl-Alt-F1 and Ctrl-Alt-F2. This occurs because the KDGKBMODE (aka current keyboard mode) check is mishandled."
15,Off-by-one Error in systemd-libs | CVE-2022-3821 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-3821,RHEL:8,"An off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service."
16,Information Exposure in systemd-libs | CVE-2022-4415 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-4415,RHEL:8,A vulnerability was found in systemd. This security flaw can cause a local information leak due to systemd-coredump not respecting the fs.suid_dumpable kernel setting.
17,Link Following in rpm-libs | CVE-2021-35939 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-35939,RHEL:8,It was found that the fix for CVE-2017-7500 and CVE-2017-7501 was incomplete: the check was only implemented for the parent directory of the file to be created. A local unprivileged user who owns another ancestor directory could potentially use this flaw to gain root privileges. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.
18,Link Following in rpm-libs | CVE-2021-35937 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-35937,RHEL:8,"A race condition vulnerability was found in rpm. A local unprivileged user could use this flaw to bypass the checks that were introduced in response to CVE-2017-7500 and CVE-2017-7501, potentially gaining root privileges. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability."
19,Link Following in rpm-libs | CVE-2021-35938 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-35938,RHEL:8,A symbolic link issue was found in rpm. It occurs when rpm sets the desired permissions and credentials after installing a file. A local unprivileged user could use this flaw to exchange the original file with a symbolic link to a security-critical file and escalate their privileges on the system. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.
20,Improper Verification of Cryptographic Signature in rpm-libs | CVE-2021-3521 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-3521,RHEL:8,"There is a flaw in RPM's signature functionality. OpenPGP subkeys are associated with a primary key via a ""binding signature."" RPM does not check the binding signature of subkeys prior to importing them. If an attacker is able to add or socially engineer another party to add a malicious subkey to a legitimate public key, RPM could wrongly trust a malicious signature. The greatest impact of this flaw is to data integrity. To exploit this flaw, an attacker must either compromise an RPM repository or convince an administrator to install an untrusted RPM or public key. It is strongly recommended to only use RPMs and public keys from trusted sources."
21,Link Following in rpm | CVE-2021-35939 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-35939,RHEL:8,It was found that the fix for CVE-2017-7500 and CVE-2017-7501 was incomplete: the check was only implemented for the parent directory of the file to be created. A local unprivileged user who owns another ancestor directory could potentially use this flaw to gain root privileges. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.
22,Link Following in rpm | CVE-2021-35937 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-35937,RHEL:8,"A race condition vulnerability was found in rpm. A local unprivileged user could use this flaw to bypass the checks that were introduced in response to CVE-2017-7500 and CVE-2017-7501, potentially gaining root privileges. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability."
23,Link Following in rpm | CVE-2021-35938 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-35938,RHEL:8,A symbolic link issue was found in rpm. It occurs when rpm sets the desired permissions and credentials after installing a file. A local unprivileged user could use this flaw to exchange the original file with a symbolic link to a security-critical file and escalate their privileges on the system. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.
24,Improper Verification of Cryptographic Signature in rpm | CVE-2021-3521 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-3521,RHEL:8,"There is a flaw in RPM's signature functionality. OpenPGP subkeys are associated with a primary key via a ""binding signature."" RPM does not check the binding signature of subkeys prior to importing them. If an attacker is able to add or socially engineer another party to add a malicious subkey to a legitimate public key, RPM could wrongly trust a malicious signature. The greatest impact of this flaw is to data integrity. To exploit this flaw, an attacker must either compromise an RPM repository or convince an administrator to install an untrusted RPM or public key. It is strongly recommended to only use RPMs and public keys from trusted sources."
25,Out-of-bounds Read in pcre2 | CVE-2022-1586 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-1586,RHEL:8,An out-of-bounds read vulnerability was discovered in the PCRE2 library in the compile_xclass_matchingpath() function of the pcre2_jit_compile.c file. This involves a unicode property matching issue in JIT-compiled regular expressions. The issue occurs because the character was not fully read in case-less matching within JIT.
26,Out-of-bounds Read in openssl-libs | CVE-2021-3712 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-3712,RHEL:8,"ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own ""d2i"" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the ""data"" and ""length"" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the ""data"" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y)."
27,Arbitrary Command Injection in openssl-libs | CVE-2022-1292 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-1292,RHEL:8,"The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd)."
28,Arbitrary Command Injection in openssl-libs | CVE-2022-2068 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-2068,RHEL:8,"In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze)."
29,Missing Required Cryptographic Step in openssl-libs | CVE-2022-2097 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-2097,RHEL:8,"AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of ""in place"" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p)."
30,Out-of-Bounds in ncurses-libs | CVE-2021-39537 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-39537,RHEL:8,An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.
31,Out-of-Bounds in ncurses-base | CVE-2021-39537 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-39537,RHEL:8,An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.
32,Inappropriate Encoding for Output Context in libgcc | CVE-2021-42694 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-42694,RHEL:8,"** DISPUTED ** An issue was discovered in the character definitions of the Unicode Specification through 14.0. The specification allows an adversary to produce source code identifiers such as function names using homoglyphs that render visually identical to a target identifier. Adversaries can leverage this to inject code via adversarial identifier definitions in upstream software dependencies invoked deceptively in downstream software. NOTE: the Unicode Consortium offers the following alternative approach to presenting this concern. An issue is noted in the nature of international text that can affect applications that implement support for The Unicode Standard (all versions). Unless mitigated, an adversary could produce source code identifiers using homoglyph characters that render visually identical to but are distinct from a target identifier. In this way, an adversary could inject adversarial identifier definitions in upstream software that are not detected by human reviewers and are invoked deceptively in downstream software. The Unicode Consortium has documented this class of security vulnerability in its document, Unicode Technical Report #36, Unicode Security Considerations. The Unicode Consortium also provides guidance on mitigations for this class of issues in Unicode Technical Standard #39, Unicode Security Mechanisms."
33,Off-by-one Error in glibc-minimal-langpack | CVE-2021-3999 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-3999,RHEL:8,A flaw was found in glibc. An off-by-one buffer overflow and underflow in getcwd() may lead to memory corruption when the size of the buffer is exactly 1. A local attacker who can control the input buffer and size passed to getcwd() in a setuid program could use this flaw to potentially execute arbitrary code and escalate their privileges on the system.
34,Improper Input Validation in glibc-minimal-langpack | CVE-2022-23218 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-23218,RHEL:8,"The deprecated compatibility function svcunix_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its path argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution."
35,Improper Input Validation in glibc-minimal-langpack | CVE-2022-23219 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-23219,RHEL:8,"The deprecated compatibility function clnt_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its hostname argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution."
36,Off-by-one Error in glibc-langpack-en | CVE-2021-3999 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-3999,RHEL:8,A flaw was found in glibc. An off-by-one buffer overflow and underflow in getcwd() may lead to memory corruption when the size of the buffer is exactly 1. A local attacker who can control the input buffer and size passed to getcwd() in a setuid program could use this flaw to potentially execute arbitrary code and escalate their privileges on the system.
37,Improper Input Validation in glibc-langpack-en | CVE-2022-23218 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-23218,RHEL:8,"The deprecated compatibility function svcunix_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its path argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution."
38,Improper Input Validation in glibc-langpack-en | CVE-2022-23219 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-23219,RHEL:8,"The deprecated compatibility function clnt_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its hostname argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution."
39,Off-by-one Error in glibc-common | CVE-2021-3999 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-3999,RHEL:8,A flaw was found in glibc. An off-by-one buffer overflow and underflow in getcwd() may lead to memory corruption when the size of the buffer is exactly 1. A local attacker who can control the input buffer and size passed to getcwd() in a setuid program could use this flaw to potentially execute arbitrary code and escalate their privileges on the system.
40,Improper Input Validation in glibc-common | CVE-2022-23218 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-23218,RHEL:8,"The deprecated compatibility function svcunix_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its path argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution."
41,Improper Input Validation in glibc-common | CVE-2022-23219 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-23219,RHEL:8,"The deprecated compatibility function clnt_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its hostname argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution."
42,Off-by-one Error in glibc | CVE-2021-3999 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-3999,RHEL:8,A flaw was found in glibc. An off-by-one buffer overflow and underflow in getcwd() may lead to memory corruption when the size of the buffer is exactly 1. A local attacker who can control the input buffer and size passed to getcwd() in a setuid program could use this flaw to potentially execute arbitrary code and escalate their privileges on the system.
43,Improper Input Validation in glibc | CVE-2022-23218 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-23218,RHEL:8,"The deprecated compatibility function svcunix_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its path argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution."
44,Improper Input Validation in glibc | CVE-2022-23219 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-23219,RHEL:8,"The deprecated compatibility function clnt_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its hostname argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution."
45,Acceptance of Extraneous Untrusted Data With Trusted Data in cryptsetup-libs | CVE-2021-4122 | Snyk,https://www.cve.org/CVERecord?id=CVE-2021-4122,RHEL:8,"It was found that a specially crafted LUKS header could trick cryptsetup into disabling encryption during the recovery of the device. An attacker with physical access to the medium, such as a flash disk, could use this flaw to force a user into permanently disabling the encryption layer of that medium."
46,Out-of-Bounds in zlib | CVE-2018-25032 | Snyk,https://www.cve.org/CVERecord?id=CVE-2018-25032,RHEL:8,"zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches."
47,Incorrect Behavior Order: Early Validation in xz-libs | CVE-2022-1271 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-1271,RHEL:8,"An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system."
48,Use After Free in systemd-pam | CVE-2022-2526 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-2526,RHEL:8,"A use-after-free vulnerability was found in systemd. This issue occurs due to the on_stream_io() function and dns_stream_complete() function in 'resolved-dns-stream.c' not incrementing the reference counting for the DnsStream object. Therefore, other functions and callbacks called can dereference the DNSStream object, causing the use-after-free when the reference is still used later."
49,Use After Free in systemd-libs | CVE-2022-2526 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-2526,RHEL:8,"A use-after-free vulnerability was found in systemd. This issue occurs due to the on_stream_io() function and dns_stream_complete() function in 'resolved-dns-stream.c' not incrementing the reference counting for the DnsStream object. Therefore, other functions and callbacks called can dereference the DNSStream object, causing the use-after-free when the reference is still used later."
50,Loop with Unreachable Exit Condition ('Infinite Loop') in openssl-libs | CVE-2022-0778 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-0778,RHEL:8,"The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc)."
51,Incorrect Behavior Order: Early Validation in gzip | CVE-2022-1271 | Snyk,https://www.cve.org/CVERecord?id=CVE-2022-1271,RHEL:8,"An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system."
